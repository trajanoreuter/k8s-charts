{{- if .Values.initialJob.enabled }}
apiVersion: batch/v1
kind: Job
metadata:
  name: {{ include "api-chart.fullname" . }}
  labels:
    {{- include "api-chart.labels" . | nindent 4 }}
    {{- if .Values.datadog.enabled }}
    tags.datadoghq.com/env: {{ .Values.application.environment }}
    tags.datadoghq.com/service: {{ .Values.application.name }}
    tags.datadoghq.com/version: "{{ .Values.image.tag }}"
    {{- end }}
    app: {{ include "api-chart.fullname" . }}
    {{- with .Values.labels }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
  annotations:
    argocd.argoproj.io/hook: PreSync
    argocd.argoproj.io/hook-delete-policy: BeforeHookCreation
    {{- with .Values.annotations }}
      {{- toYaml . | nindent 4 }}
    {{- end }}
spec:
  {{- if .Values.initialJob.backoffLimit }}
  backoffLimit: {{ .Values.initialJob.backoffLimit }}
  {{- end }}
  {{- if .Values.initialJob.parallelism }}
  parallelism: {{ .Values.initialJob.parallelism }}
  {{- end }}
  {{- if .Values.initialJob.completions }}
  completions: {{ .Values.initialJob.completions }}
  {{- end }}
  template:
    metadata:
      annotations:
        {{- with .Values.annotations }}
              {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.datadog.enabled }}
        {{- if .Values.datadog.logs.enabled }}
        "ad.datadoghq.com/{{ .Values.application.name }}.logs": '[{"source":"{{ .Values.application.language }}","service":"{{ .Values.application.name }}"}]'
        {{- end }}
        {{- if and (.Values.github.lastCommitSha) (.Values.github.repositoryUrl) }}
        "ad.datadoghq.com/{{ .Values.application.name }}.tags": '{"git.commit.sha": "{{ .Values.github.lastCommitSha }}", "git.repository_url": "{{ .Values.github.repositoryUrl }}", "project": "{{ .Values.labels.project }}", "repository": "{{ .Values.labels.repository }}", "support": "{{ .Values.labels.support }}", "owner": "{{ .Values.labels.owner }}", "cost-center": "{{ index .Values.labels "cost-center" }}", "github-org": "{{ index .Values.labels "github-org" }}", "github-repo": "{{ index .Values.labels "github-repo" }}"}'
        {{- else }}
        "ad.datadoghq.com/{{ .Values.application.name }}.tags": '{"project": "{{ .Values.labels.project }}", "repository": "{{ .Values.labels.repository }}", "support": "{{ .Values.labels.support }}", "owner": "{{ .Values.labels.owner }}", "cost-center": "{{ index .Values.labels "cost-center" }}, "github-org": "{{ index .Values.labels "github-org" }}", "github-repo": "{{ index .Values.labels "github-repo" }}""}'
        {{- end }}
        {{- if and .Values.datadog.apm.enabled .Values.datadog.apm.injection.enabled .Values.datadog.apm.injection.libVersion }}
        admission.datadoghq.com/{{ .Values.datadog.apm.injection.language }}-lib.version: "{{ .Values.datadog.apm.injection.libVersion }}"
        {{- end }}
        {{- end }}
      labels:
        {{- include "api-chart.labels" . | nindent 8 }}
        {{- if .Values.datadog.enabled }}
        tags.datadoghq.com/env: {{ .Values.application.environment }}
        tags.datadoghq.com/service: {{ .Values.application.name }}
        tags.datadoghq.com/version: "{{ .Values.image.tag }}"
        {{- if and .Values.datadog.apm.enabled .Values.datadog.apm.injection.enabled .Values.datadog.apm.injection.libVersion }}
        admission.datadoghq.com/enabled: "true"
        admission.datadoghq.com/config.mode: "hostip"
        {{- end }}
        {{- end }}
        app: {{ include "api-chart.fullname" . }}
        job: {{ .Values.application.name }}
        {{- with .Values.labels }}
              {{- toYaml . | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.tolerations }}
      tolerations:
        {{- with .Values.tolerations }}
              {{- toYaml . | nindent 8 }}
        {{- end }}
      {{- end }}
      {{- if .Values.nodeSelector }}
      nodeSelector:
        {{- with .Values.nodeSelector }}
              {{- toYaml . | nindent 8 }}
        {{- end }}
        {{- if .Values.cloudProviders.aws.karpenter.enabled }}
        {{- if .Values.cloudProviders.aws.karpenter.capacityType }}
        karpenter.sh/capacity-type: {{ .Values.cloudProviders.aws.karpenter.capacityType }}
        {{- else }}
        karpenter.sh/capacity-type: spot
        {{- end }}
        {{- end }}
      {{- end }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: "topology.kubernetes.io/zone"
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                - {{ include "api-chart.fullname" . }}
        - maxSkew: 1
          topologyKey: "kubernetes.io/hostname"
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchExpressions:
              - key: app
                operator: In
                values:
                - {{ include "api-chart.fullname" . }}
      restartPolicy: {{ .Values.initialJob.restartPolicy }}
      serviceAccountName: {{ include "api-chart.fullname" . }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
        runAsNonRoot: true
      restartPolicy: {{ .Values.initialJob.restartPolicy }}
      containers:
        - name: {{ .Values.application.name }}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          {{- if .Values.initialJob.image }}
          image: "{{ .Values.initialJob.image }}"
          {{- else }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          {{- end }}
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            {{- if .Values.datadog.enabled }}
            {{- if not .Values.datadog.apm.enabled }}
            - name: DD_TRACE_ENABLED
              value: "false"
            {{- end }}
            - name: DD_ENV
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/env']
            - name: DD_SERVICE
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/service']
            - name: DD_VERSION
              valueFrom:
                fieldRef:
                  fieldPath: metadata.labels['tags.datadoghq.com/version']
            - name: DD_AGENT_HOST
              valueFrom:
                fieldRef:
                  fieldPath: status.hostIP
            {{- if .Values.datadog.otlp.enabled }}
            - name: OTEL_EXPORTER_OTLP_GRPC_ENDPOINT
              value: "$(DD_AGENT_HOST):4317"
            - name: OTEL_EXPORTER_OTLP_HTTP_ENDPOINT
              value: "http://$(DD_AGENT_HOST):4318"
            {{- end }}
            {{- end }}
            {{- if .Values.envs }}
            {{- range $key, $value := .Values.envs }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            {{- end }}
            {{- if .Values.jsonEnvs }}
            {{- range $key, $value := .Values.jsonEnvs }}
            - name: {{ $key }}
              value: {{ $value | toJson |  quote }}
            {{- end }}
            {{- end }}
            {{- if and .Values.secrets.envVarEnabled .Values.secrets.keys }}
              {{- range .Values.secrets.keys }}
            - name: {{ . }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "api-chart.fullname" $ }}
                  key: {{ . }}
              {{- end }}
            {{- end }}
          {{- if .Values.initialJob.command }}
          {{- with .Values.initialJob.command }}
          command:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.initialJob.args }}
          {{- with .Values.initialJob.args }}
          args:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{- end }}
          resources:
            limits:
              memory: {{ .Values.initialJob.resources.memory }}
            requests:
              memory: {{ .Values.initialJob.resources.memory }}
              cpu: {{ .Values.initialJob.resources.cpu }}
        {{- range $sidecar := .Values.sidecars }}
        {{- if $sidecar.enabled }}
        - name: {{ $sidecar.name }}
          securityContext:
            allowPrivilegeEscalation: false
            privileged: false
          image: "{{ $sidecar.image }}"
          {{- if $sidecar.command }}
          {{- with $sidecar.command }}
          command:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{- end }}
          {{- if $sidecar.args }}
          {{- with $sidecar.args }}
          args:
{{ toYaml . | indent 12 }}
          {{- end }}
          {{- end }}
          imagePullPolicy: IfNotPresent
          {{- if $sidecar.containerPort }}
          ports:
            - name: http
              containerPort: {{ $sidecar.containerPort }}
              protocol: TCP
          {{- end }}
          env:
            {{- if $sidecar.envs}}
            {{- range $key, $value := $sidecar.envs }}
            - name: {{ $key }}
              value: "{{ $value }}"
            {{- end }}
            {{- end }}
            {{- if $sidecar.secrets }}
              {{- range $sidecar.secrets }}
            - name: {{ . }}
              valueFrom:
                secretKeyRef:
                  name: {{ include "api-chart.fullname" $ }}
                  key: {{ . }}
              {{- end }}
            {{- end }}
          resources:
            limits:
              memory: {{ $sidecar.resources.memory }}
            requests:
              memory: {{ $sidecar.resources.memory }}
              cpu: {{ $sidecar.resources.cpu }}
        {{- end }}
        {{- end }}
          volumeMounts:
            - name: {{ include "api-chart.fullname" . }}
              mountPath: "/configmap"
              readOnly: true
      {{- if .Values.secrets.keys }}
            - name: secrets
              mountPath: /secrets
              readOnly: true
      {{- end }}
      volumes:
        - name: {{ include "api-chart.fullname" . }}
          configMap:
            name: {{ include "api-chart.fullname" . }}
        {{- if .Values.secrets.keys }}
        - name: secrets
          secret:
            defaultMode: 420
            secretName: {{ include "api-chart.fullname" . }}
        {{- end }}
{{- end }}
